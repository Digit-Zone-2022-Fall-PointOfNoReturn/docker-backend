name: hackathon-digit-zone

# Disclaimer: images application versions commonly relies on persistence
#             of their syntax, so we must lock only major versions
#             (I believe that nginx can have the latest stable version due
#             to persistent syntax)

# Dependencies: nginx need backend host to be resolved, so it depends on backend;
#               backend may need database for migrations (avoiding question about)
#               typical using

services:
  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: .dockerfile
    networks:
      - backend-nginx
    depends_on:
      - backend-django
    ports:
      - "80:80"
    volumes:
      - django-static:/var/www/backend-django:ro

  backend-django:
    container_name: backend-django
    build:
      context: django
      dockerfile: .dockerfile
    networks:
      - backend-nginx
      - backend-database
    depends_on:
      - database-postgres
    volumes:
      - type: volume
        target: /django/apps/users/migrations
      - type: volume
        target: /django/apps/stores/migrations
      # Anonymous volume for blocking files storage
      - type: volume
        target: /django/blocking
      - django-static:/var/www/backend-django
    environment:
      # PYTHON
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      # DJANGO
      - DJANGO_DEBUG=1
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY?error}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS?error}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS?error}

      # POSTGRES AUTH
      # HOST:PORT
      - DJANGO_POSTGRES_HOST=database-postgres
      - DJANGO_POSTGRES_PORT=5432

      # USER PASSWORD (ENSURE CREATED)
      - DJANGO_POSTGRES_USER=${DJANGO_POSTGRES_USER?error}
      - DJANGO_POSTGRES_PASSWORD=${DJANGO_POSTGRES_PASSWORD?error}

      # DATABASE NAME TO CONNECT (ENSURE CREATED)
      - DJANGO_POSTGRES_DB=${DJANGO_POSTGRES_DB?error}

  database-postgres:
    image: postgres:14-alpine
    container_name: database-postgres
    networks:
      - backend-database
    volumes:
      - type: bind
        source: ./postgres/scripts
        target: /docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    environment:
      # SUPER USER
      - POSTGRES_USER=${POSTGRES_USER?error}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?error}

      # POSTGRES DJANGO USER AND DB
      # USER PASSWORD (ENSURE CREATED)
      - DJANGO_POSTGRES_USER=${DJANGO_POSTGRES_USER?error}
      - DJANGO_POSTGRES_PASSWORD=${DJANGO_POSTGRES_PASSWORD?error}

      # DATABASE NAME TO CONNECT (ENSURE CREATED)
      - DJANGO_POSTGRES_DB=${DJANGO_POSTGRES_DB?error}

networks:
  backend-nginx:
    driver: bridge

  backend-database:
    driver: bridge

volumes:
  django-static:
  postgres:
